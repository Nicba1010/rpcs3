version: '{build}'
 
image: ubuntu
 
install:
 - git submodule update --init
 - sudo add-apt-repository ppa:beineri/opt-qt-5.10.1-xenial
 - sudo add-apt-repository ppa:jonathonf/binutils
 - sudo apt update
 - sudo apt install -y qt510-meta-minimal
 - sudo apt install -y binutils cmake ninja-build libasound2-dev libopenal-dev freeglut3-dev libc6-dev llvm-4.0 llvm-4.0-dev libedit-dev g++-5 gcc-5 libstdc++-5-dev lib32stdc++6 zlib1g-dev libudev-dev libevdev-dev libpulse-dev libglew-dev libvulkan1 libvulkan-dev desktop-file-utils
 - wget https://mirrors.kernel.org/ubuntu/pool/universe/g/glew/libglew2.0_2.0.0-5_amd64.deb;
 - sudo dpkg -i libglew2.0_2.0.0-5_amd64.deb
 - QTVER=5.10.1

before_build:
 - mkdir build ; cd build
 - source /opt/qt510/bin/qt510-env.sh
 - cmake .. -DCMAKE_INSTALL_PREFIX=/usr -DUSE_NATIVE_INSTRUCTIONS=OFF -G Ninja

build_script:
 - ninja
 
after_build:
 - ls -lash
 - export LD_LIBRARY_PATH=/opt/qt510/lib
 - echo $LD_LIBRARY_PATH
 - DESTDIR=appdir ninja install ; find appdir/ ;
 - find ../bin ;
 - wget -c "https://github.com/probonopd/linuxdeployqt/releases/download/continuous/linuxdeployqt-continuous-x86_64.AppImage" ;
 - chmod a+x linuxdeployqt*.AppImage ;
 - export PATH=~/Qt/$QTVER/gcc_64/bin/:${PATH} ;
 - ./linuxdeployqt*.AppImage ./appdir/usr/share/applications/*.desktop -bundle-non-qt-libs ;
 - ls ./appdir/usr/lib/ ;
 - #rm ./appdir/usr/lib/libfreetype.so.6 ;
 - #rm ./appdir/usr/lib/libglapi.so.0 ;
 - rm -r ./appdir/usr/share/doc ;
 - rm -r ./appdir/usr/share/man ;
 - rm -r ./appdir/usr/include ;
 - export PATH=${TRAVIS_BUILD_DIR}/build/squashfs-root/usr/bin/:${PATH} ;
 - echo "Embed newer libstdc++ for distros that don't come with it (ubuntu 14.04)";
 - mkdir -p appdir/usr/optional/ ; mkdir -p appdir/usr/optional/libstdc++/ ;
 - cp /usr/lib/x86_64-linux-gnu/libstdc++.so.6 ./appdir/usr/optional/libstdc++/ ;
 - rm ./appdir/AppRun ;
 - wget -c https://github.com/RPCS3/AppImageKit-checkrt/releases/download/continuous/AppRun-patched-x86_64 -O ./appdir/AppRun ;
 - chmod a+x ./appdir/AppRun ;
 - wget -c https://github.com/RPCS3/AppImageKit-checkrt/releases/download/continuous/exec-x86_64.so -O ./appdir/usr/optional/exec.so ;
 - echo "Package it up and send it off" 
 - ./linuxdeployqt*.AppImage --appimage-extract ;
 - ./squashfs-root/usr/bin/appimagetool ${TRAVIS_BUILD_DIR}/build/appdir ;
 - find ./appdir -executable -type f -exec ldd {} \; | grep " => /usr" | cut -d " " -f 2-3 | sort | uniq ;
 - #COMM_TAG="$(git describe --tags $(git rev-list --tags --max-count=1))" ;
 - #COMM_COUNT="$(git rev-list --count HEAD)" ;
 - #curl "${UPLOAD_URL}${TRAVIS_COMMIT:0:8}&t=${COMM_TAG}&a=${COMM_COUNT}" --upload-file ./RPCS3*.AppImage;
 - du ./ -ha

artifacts:
- path: RPCS3.AppImage
  name: Not like its gonna work
